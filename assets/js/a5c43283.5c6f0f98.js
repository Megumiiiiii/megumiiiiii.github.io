"use strict";(self.webpackChunkelysian=self.webpackChunkelysian||[]).push([[4712],{4137:(e,a,t)=>{t.d(a,{Zo:()=>c,kt:()=>k});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=n.createContext({}),u=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},c=function(e){var a=u(e.components);return n.createElement(s.Provider,{value:a},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},d=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(t),d=r,k=p["".concat(s,".").concat(d)]||p[d]||m[d]||o;return t?n.createElement(k,l(l({ref:a},c),{},{components:t})):n.createElement(k,l({ref:a},c))}));function k(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=d;var i={};for(var s in a)hasOwnProperty.call(a,s)&&(i[s]=a[s]);i.originalType=e,i[p]="string"==typeof e?e:r,l[1]=i;for(var u=2;u<o;u++)l[u]=t[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},425:(e,a,t)=>{t.d(a,{Z:()=>l});var n=t(7294),r=t(6010);const o={tabItem:"tabItem_Ymn6"};function l(e){let{children:a,hidden:t,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,l),hidden:t},a)}},3992:(e,a,t)=>{t.d(a,{Z:()=>v});var n=t(7462),r=t(7294),o=t(6010),l=t(2957),i=t(6550),s=t(5238),u=t(3609),c=t(2560);function p(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:a}=e;return!!a&&"object"==typeof a&&"value"in a}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:a,label:t,attributes:n,default:r}}=e;return{value:a,label:t,attributes:n,default:r}}))}function m(e){const{values:a,children:t}=e;return(0,r.useMemo)((()=>{const e=a??p(t);return function(e){const a=(0,u.l)(e,((e,a)=>e.value===a.value));if(a.length>0)throw new Error(`Docusaurus error: Duplicate values "${a.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[a,t])}function d(e){let{value:a,tabValues:t}=e;return t.some((e=>e.value===a))}function k(e){let{queryString:a=!1,groupId:t}=e;const n=(0,i.k6)(),o=function(e){let{queryString:a=!1,groupId:t}=e;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:a,groupId:t});return[(0,s._X)(o),(0,r.useCallback)((e=>{if(!o)return;const a=new URLSearchParams(n.location.search);a.set(o,e),n.replace({...n.location,search:a.toString()})}),[o,n])]}function h(e){const{defaultValue:a,queryString:t=!1,groupId:n}=e,o=m(e),[l,i]=(0,r.useState)((()=>function(e){let{defaultValue:a,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!d({value:a,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${a}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return a}const n=t.find((e=>e.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:a,tabValues:o}))),[s,u]=k({queryString:t,groupId:n}),[p,h]=function(e){let{groupId:a}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(a),[n,o]=(0,c.Nk)(t);return[n,(0,r.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:n}),g=(()=>{const e=s??p;return d({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{g&&i(g)}),[g]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),h(e)}),[u,h,o]),tabValues:o}}var g=t(1048);const N={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:a,block:t,selectedValue:i,selectValue:s,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,l.o5)(),m=e=>{const a=e.currentTarget,t=c.indexOf(a),n=u[t].value;n!==i&&(p(a),s(n))},d=e=>{let a=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;a=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;a=c[t]??c[c.length-1];break}}a?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":t},a)},u.map((e=>{let{value:a,label:t,attributes:l}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:i===a?0:-1,"aria-selected":i===a,key:a,ref:e=>c.push(e),onKeyDown:d,onClick:m},l,{className:(0,o.Z)("tabs__item",N.tabItem,l?.className,{"tabs__item--active":i===a})}),t??a)})))}function y(e){let{lazy:a,children:t,selectedValue:n}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(a){const e=o.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,a)=>(0,r.cloneElement)(e,{key:a,hidden:e.props.value!==n}))))}function f(e){const a=h(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",N.tabList)},r.createElement(b,(0,n.Z)({},e,a)),r.createElement(y,(0,n.Z)({},e,a)))}function v(e){const a=(0,g.Z)();return r.createElement(f,(0,n.Z)({key:String(a)},e))}},9825:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>s,default:()=>k,frontMatter:()=>i,metadata:()=>u,toc:()=>p});var n=t(7462),r=(t(7294),t(4137)),o=t(3992),l=t(425);const i={title:"Installation",sidebar_position:1,authors:["megumii"],tags:["Arweave","EVM"]},s=void 0,u={unversionedId:"what/sarco/sarco",id:"what/sarco/sarco",title:"Installation",description:"Official Links",source:"@site/docs/what/sarco/sarco.mdx",sourceDirName:"what/sarco",slug:"/what/sarco/",permalink:"/docs/what/sarco/",draft:!1,editUrl:"https://github.com/Megumiiiiii/megumiiiiii.github.io/edit/main/docs/what/sarco/sarco.mdx",tags:[{label:"Arweave",permalink:"/docs/tags/arweave"},{label:"EVM",permalink:"/docs/tags/evm"}],version:"current",lastUpdatedBy:"Megumiiiiii",lastUpdatedAt:1697842191,formattedLastUpdatedAt:"Oct 20, 2023",sidebarPosition:1,frontMatter:{title:"Installation",sidebar_position:1,authors:["megumii"],tags:["Arweave","EVM"]},sidebar:"tutorialSidebar",previous:{title:"Sarcophagus",permalink:"/docs/category/sarcophagus"},next:{title:"Migration",permalink:"/docs/what/sarco/update"}},c={},p=[{value:"Official Links",id:"official-links",level:2},{value:"Minimum requirements",id:"minimum-requirements",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Setup DNS Record",id:"setup-dns-record",level:3},{value:"Install Dependencies",id:"install-dependencies",level:2},{value:"Open Port",id:"open-port",level:2},{value:"Clone Repo",id:"clone-repo",level:2},{value:"Copy <code>.env.sample</code> to <code>.env</code>",id:"copy-envsample-to-env",level:3},{value:"Generate Mnemonic Pharse",id:"generate-mnemonic-pharse",level:3},{value:"Create a blank <code>peer-id.json</code> file",id:"create-a-blank-peer-idjson-file",level:3},{value:"Edit <code>.env</code> file",id:"edit-env-file",level:3},{value:"$SARCO Token",id:"sarco-token",level:2},{value:"Register",id:"register",level:3},{value:"Start the node",id:"start-the-node",level:3},{value:"Useful Command",id:"useful-command",level:2},{value:"CheckProfile",id:"checkprofile",level:4},{value:"Troubleshooting",id:"troubleshooting",level:3}],m={toc:p},d="wrapper";function k(e){let{components:a,...i}=e;return(0,r.kt)(d,(0,n.Z)({},m,i,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"official-links"},"Official Links"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://twitter.com/sarcophagusio"},"Twitter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://discord.gg/sarcophagus-community-753398645507883099"},"Discord")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://sarcophagus.io/"},"Website"))),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"logo",src:t(449).Z,width:"1200",height:"675"})),(0,r.kt)("h2",{id:"minimum-requirements"},"Minimum requirements"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Spec"),(0,r.kt)("th",{parentName:"tr",align:null},"Size"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"20GB"),(0,r.kt)("td",{parentName:"tr",align:null},"SSD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2GB"),(0,r.kt)("td",{parentName:"tr",align:null},"RAM")))),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Git"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.simplilearn.com/tutorials/docker-tutorial/how-to-install-docker-on-ubuntu"},"Dokcer >= 20.0")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.docker.com/compose/install/linux/#install-the-plugin-manually"},"Dokcer compose >= 2.0.0)")),(0,r.kt)("li",{parentName:"ul"},"Server must have ports 80 and 443 open"),(0,r.kt)("li",{parentName:"ul"},"ETH wallet ( Private Key & Mnemonic )",(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"ETH balance (for signing transactions)"),(0,r.kt)("p",{parentName:"blockquote"},"SARCO balance (for bonding your archaeologist to curses)"))),(0,r.kt)("li",{parentName:"ul"},"RPC wss:// URL (Infura, Alchemy, etc.)"),(0,r.kt)("li",{parentName:"ul"},"Domain name pointed at your server's IP address")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"If running on Goerli (chain id = 5), then you will need Goerli ETH + Goerli SARCO.")),(0,r.kt)("h3",{id:"setup-dns-record"},"Setup DNS Record"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Go to the domain management"),(0,r.kt)("li",{parentName:"ul"},"Add DNS Records."),(0,r.kt)("li",{parentName:"ul"},"Select ",(0,r.kt)("em",{parentName:"li"},"A"),"."),(0,r.kt)("li",{parentName:"ul"},"Enter your name and your public IP as a value."),(0,r.kt)("li",{parentName:"ul"},"Save")),(0,r.kt)("h2",{id:"install-dependencies"},"Install Dependencies"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt update; sudo apt upgrade\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'sudo apt-get update && sudo apt install git -y && sudo apt install apt-transport-https ca-certificates curl software-properties-common -y && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - && sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable" && sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin -y\n')),(0,r.kt)("h2",{id:"open-port"},"Open Port"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ufw allow ssh; sudo ufw allow 443/tcp; sudo ufw allow 80/tcp; sudo ufw enable\n")),(0,r.kt)("h2",{id:"clone-repo"},"Clone Repo"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/sarcophagus-org/quickstart-archaeologist\ncd quickstart-archaeologist\n")),(0,r.kt)("h3",{id:"copy-envsample-to-env"},"Copy ",(0,r.kt)("inlineCode",{parentName:"h3"},".env.sample")," to ",(0,r.kt)("inlineCode",{parentName:"h3"},".env")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cp .env.example .env\n")),(0,r.kt)("h3",{id:"generate-mnemonic-pharse"},"Generate Mnemonic Pharse"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://iancoleman.io/bip39/"},"Here"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"BACKUP")),(0,r.kt)("h3",{id:"create-a-blank-peer-idjson-file"},"Create a blank ",(0,r.kt)("inlineCode",{parentName:"h3"},"peer-id.json")," file"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"touch peer-id.json\n")),(0,r.kt)("h3",{id:"edit-env-file"},"Edit ",(0,r.kt)("inlineCode",{parentName:"h3"},".env")," file"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"nano .env\n")),(0,r.kt)("p",null,"Fill in your data"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u2193 \u2193 \u2193")),(0,r.kt)("admonition",{title:".env",type:"info"},(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"ETH_PRIVATE_KEY")," is your Private Key which has ETH/Matic and $SARCO"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"NOTIFICATION_WEBHOOK_URL")," is your discord webhook url. You can follow the instructions here to set up a discord webhook url: ",(0,r.kt)("a",{parentName:"li",href:"https://support.discord.com/hc/en-us/articles/228383668-Intro-to-Webhooks"},"https://support.discord.com/hc/en-us/articles/228383668-Intro-to-Webhooks"))),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"Both Chain",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-py",metastring:'title=".env"',title:'".env"'},'## Key used to encrypt secrets and sign ETH transactions\n## The address associated with this key is your archaeologist identifier\nETH_PRIVATE_KEY=ugfhttawfihqwoid132b1231b23\n\n## (optional) multiply gas price estimation by this amount (i.e. 2 means 2x RPC gas price estimate)\n#GAS_MULTIPLIER=\nNOTIFICATION_WEBHOOK_URL=https://discord.com/api/webhooks/hafkakakjajbasbkadsbaksdjbakfbakfaf\n\n## Domain to use for your archaeologist\n## This domain should be pointed with an A record to your server\'s IP\nDOMAIN=my.exampledomain.com\n\n## Comma-separated list of chain ids of each network you want to run your service on.\n## Supported Chain IDS:\n## 1 = Mainnet\n## 5 = Goerli\n## 11155111 = Sepolia\n## 84531 = Base Goerli\n## 80001 = Polygon Mumbai\n## example, to run on mainnet, goerli, and sepolia, set:\n## CHAIN_IDS="1,5,11155111"\nCHAIN_IDS=1,137\n\n## Here, you should define:\n## - RPC provider urls.\n## - Mnemonics used to derive keypairs to encrypt sarcophagi.\n##   Generate a new one here - https://iancoleman.io/bip39/ or see README to generate one offline.\n## Uncomment and set, for each network chain id you want to run on, your own\n## private provider URL (infura, alchemy, etc) and a unique mnemonic for that network.\n## ================================================================================================\nMAINNET_PROVIDER_URL=wss://eth-mainnet\nMAINNET_ENCRYPTION_MNEMONIC=never gonna give you up never gonna let you down\n\n# GOERLI_PROVIDER_URL=\n# GOERLI_ENCRYPTION_MNEMONIC=\n\nPOLYGON_MAINNET_PROVIDER_URL=wss://polygon-mainnet\nPOLYGON_MAINNET_ENCRYPTION_MNEMONIC=never gonna tell a lie and hurt you\n'))),(0,r.kt)(l.Z,{value:"Ethereum Only",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-py",metastring:'title=".env"',title:'".env"'},'## Key used to encrypt secrets and sign ETH transactions\n## The address associated with this key is your archaeologist identifier\nETH_PRIVATE_KEY=ugfhttawfihqwoid132b1231b23\n\n## (optional) multiply gas price estimation by this amount (i.e. 2 means 2x RPC gas price estimate)\n#GAS_MULTIPLIER=\nNOTIFICATION_WEBHOOK_URL=https://discord.com/api/webhooks/hafkakakjajbasbkadsbaksdjbakfbakfaf\n\n## Domain to use for your archaeologist\n## This domain should be pointed with an A record to your server\'s IP\nDOMAIN=my.exampledomain.com\n\n## Comma-separated list of chain ids of each network you want to run your service on.\n## Supported Chain IDS:\n## 1 = Mainnet\n## 5 = Goerli\n## 11155111 = Sepolia\n## 84531 = Base Goerli\n## 80001 = Polygon Mumbai\n## example, to run on mainnet, goerli, and sepolia, set:\n## CHAIN_IDS="1,5,11155111"\nCHAIN_IDS=1\n\n## Here, you should define:\n## - RPC provider urls.\n## - Mnemonics used to derive keypairs to encrypt sarcophagi.\n##   Generate a new one here - https://iancoleman.io/bip39/ or see README to generate one offline.\n## Uncomment and set, for each network chain id you want to run on, your own\n## private provider URL (infura, alchemy, etc) and a unique mnemonic for that network.\n## ================================================================================================\nMAINNET_PROVIDER_URL=wss://eth-mainnet\nMAINNET_ENCRYPTION_MNEMONIC=never gonna give you up never gonna let you down\n\n# GOERLI_PROVIDER_URL=\n# GOERLI_ENCRYPTION_MNEMONIC=\n\n##POLYGON_MAINNET_PROVIDER_URL=\n##POLYGON_MAINNET_ENCRYPTION_MNEMONIC=\n'))),(0,r.kt)(l.Z,{value:"Polygon Only",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-py",metastring:'title=".env"',title:'".env"'},'## Key used to encrypt secrets and sign ETH transactions\n## The address associated with this key is your archaeologist identifier\nETH_PRIVATE_KEY=ugfhttawfihqwoid132b1231b23\n\n## (optional) multiply gas price estimation by this amount (i.e. 2 means 2x RPC gas price estimate)\n#GAS_MULTIPLIER=\nNOTIFICATION_WEBHOOK_URL=https://discord.com/api/webhooks/hafkakakjajbasbkadsbaksdjbakfbakfaf\n\n## Domain to use for your archaeologist\n## This domain should be pointed with an A record to your server\'s IP\nDOMAIN=my.exampledomain.com\n\n## Comma-separated list of chain ids of each network you want to run your service on.\n## Supported Chain IDS:\n## 1 = Mainnet\n## 5 = Goerli\n## 11155111 = Sepolia\n## 84531 = Base Goerli\n## 80001 = Polygon Mumbai\n## example, to run on mainnet, goerli, and sepolia, set:\n## CHAIN_IDS="1,5,11155111"\nCHAIN_IDS=137\n\n## Here, you should define:\n## - RPC provider urls.\n## - Mnemonics used to derive keypairs to encrypt sarcophagi.\n##   Generate a new one here - https://iancoleman.io/bip39/ or see README to generate one offline.\n## Uncomment and set, for each network chain id you want to run on, your own\n## private provider URL (infura, alchemy, etc) and a unique mnemonic for that network.\n## ================================================================================================\n##MAINNET_PROVIDER_URL=\n##MAINNET_ENCRYPTION_MNEMONIC=\n\n# GOERLI_PROVIDER_URL=\n# GOERLI_ENCRYPTION_MNEMONIC=\n\nPOLYGON_MAINNET_PROVIDER_URL=wss://polygon-mainnet\nPOLYGON_MAINNET_ENCRYPTION_MNEMONIC=never gonna tell a lie and hurt you\n'))))),(0,r.kt)("h2",{id:"sarco-token"},"$SARCO Token"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"To get $SARCO, you can swap them on Uniswap"),(0,r.kt)("li",{parentName:"ul"},"Go to ",(0,r.kt)("a",{parentName:"li",href:"https://app.uniswap.org/"},"https://app.uniswap.org/")),(0,r.kt)("li",{parentName:"ul"},"SC Sarco: ",(0,r.kt)("inlineCode",{parentName:"li"},"0x7697B462A7c4Ff5F8b55BDBC2F4076c2aF9cF51A"))),(0,r.kt)("h3",{id:"register"},"Register"),(0,r.kt)("admonition",{title:"Register on-chain",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"If you want to run on multiple chain, you need to registering 1 by 1."),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"Ethereum",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"COMPOSE_PROFILES=register NETWORK=mainnet docker compose run register\n")),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Y, Enter"),(0,r.kt)("li",{parentName:"ul"},"Then enter the nominal ( recommended: DiggingFee 100 - 500, CurseFee 300, and FreeBond 1000 )"))),(0,r.kt)(l.Z,{value:"Polygon",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"COMPOSE_PROFILES=register NETWORK=polygonMainnet docker compose run register\n")),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Y, Enter"),(0,r.kt)("li",{parentName:"ul"},"Then enter the nominal ( recommended: DiggingFee 1 - 5, CurseFee 1-5, and FreeBond 1000 )"))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Then enter the nominal ( recommended: DiggingFee 100 - 500, CurseFee 300, and FreeBond  1000 )")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Ouput"',title:'"Ouput"'},"=========================================================================================================\n\nARCHAEOLOGIST PROFILE: \n\nFIELD                      VALUE                                                                       \nexists                     true                                                                        \nmaximumRewrapInterval      200 days (17280000s)                                                        \nmaximumResurrectionTime    Dec 30 2023 (1703953499)                                                    \npeerId                     sarcophagus.example.xyz:12D3KooWRkyaFVBDFaaf3D5piG1YRJjCMSgBMj9Si4xjFDaRqjSCX\nminimumDiggingFeePerSecond 0.000153712226361799 SARCO (~ 400.00/month)                                 \nfreeBond                   1000.0SARCO                                               \ncursedBond                 0 SARCO                                                \ncurseFee                   300.0 SARCO                                                                 \naddress                    0x897015991ABC646a69EC8701B8459aA806aCf70a                                  \n\n=========================================================================================================\n")),(0,r.kt)("h3",{id:"start-the-node"},"Start the node"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"COMPOSE_PROFILES=service NETWORK=all docker compose up -d\n")),(0,r.kt)("h2",{id:"useful-command"},"Useful Command"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Check Archaeologist Service's logs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker logs -f quickstart-archaeologist-archaeologist-1\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Check Acme Companion's logs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker logs -f  quickstart-archaeologist-acme-companion-1\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Check Nginx's logs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker logs -f nginx-proxy\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Updating the service")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~/quickstart-archaeologist\ngit pull\nCOMPOSE_PROFILES=service NETWORK=all docker compose stop\nCOMPOSE_PROFILES=service NETWORK=all docker compose pull\nCOMPOSE_PROFILES=service NETWORK=all docker compose up -d\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Restarting the service")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"COMPOSE_PROFILES=service NETWORK=all docker compose stop\nCOMPOSE_PROFILES=service NETWORK=all docker compose up -d\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If you change the domain after registering")),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"Ethereum",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"NETWORK=all docker compose exec -it archaeologist sh\ncli update -u -n mainnet\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"exit\n"))),(0,r.kt)(l.Z,{value:"Polygon",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"NETWORK=all docker compose exec -it archaeologist sh\ncli update -u -n polygonMainnet\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"exit\n")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Updating Digging Fee")),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"Ethereum",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"NETWORK=all docker compose exec -it archaeologist sh\ncli update -d 300 -n mainnet\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"exit\n")),(0,r.kt)("p",null,"300 can be changed to any amount")),(0,r.kt)(l.Z,{value:"Polygon",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"NETWORK=all docker compose exec -it archaeologist sh\ncli update -d 300 -n polygonMainnet\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"exit\n")),(0,r.kt)("p",null,"300 can be changed to any amount"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Updating Free Bond ")),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"Ethereum",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"NETWORK=all docker compose exec -it archaeologist sh\ncli update -f 100 -n mainnet\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"exit\n")),(0,r.kt)("p",null,"100 can be changed to any amount")),(0,r.kt)(l.Z,{value:"Polygon",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"NETWORK=all docker compose exec -it archaeologist sh\ncli update -f 100 -n polygonMainnet\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"exit\n")),(0,r.kt)("p",null,"100 can be changed to any amount"))),(0,r.kt)("h4",{id:"checkprofile"},"CheckProfile"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Check Profile")),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"Ethereum",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"NETWORK=all docker compose exec -it archaeologist sh\ncli view -p -n mainnet\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"exit\n"))),(0,r.kt)(l.Z,{value:"Polygon",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"NETWORK=all docker compose exec -it archaeologist sh\ncli view -p -n polygonMainnet\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"exit\n")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Claim Rewards")),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"Ethereum",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"NETWORK=all docker compose exec -it archaeologist sh\ncli claim -n mainnet\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"exit\n"))),(0,r.kt)(l.Z,{value:"Polygon",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"NETWORK=all docker compose exec -it archaeologist sh\ncli claim -n polygonMainnet\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"exit\n")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Withdraw Free Bond")),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"Ethereum",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"NETWORK=all docker compose exec -it archaeologist sh\ncli free-bond -w 10 -n mainnet\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"exit\n")),(0,r.kt)("p",null,"10 can be changed to any amount")),(0,r.kt)(l.Z,{value:"Polygon",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"NETWORK=all docker compose exec -it archaeologist sh\ncli free-bond -w 10 -n polygonMainnet\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"exit\n")),(0,r.kt)("p",null,"10 can be changed to any amount"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"any other")),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"Ethereum",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"NETWORK=all docker compose exec -it archaeologist sh\ncli help -n mainnet\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"exit\n"))),(0,r.kt)(l.Z,{value:"Polygon",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"NETWORK=all docker compose exec -it archaeologist sh\ncli help -n polygonMainnet\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"exit\n")))),(0,r.kt)("h3",{id:"troubleshooting"},"Troubleshooting"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Domain A Record")),(0,r.kt)("p",null,"Your domain must have an A record pointing at the IP address of your server that the archaeologist service is running on.\n",(0,r.kt)("a",{parentName:"p",href:"https://www.nslookup.io/website-to-ip-lookup"},"https://www.nslookup.io/website-to-ip-lookup"),"\nUse this tool to confirm that your domain is pointed correctly."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Test Websocket Connection")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.piesocket.com/websocket-tester"},"https://www.piesocket.com/websocket-tester"),"\nTest that your Archaeologist can have websocket connection open by entering your websocket address in this format:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"wss://your.domain/p2p/yourPeerID\n")),(0,r.kt)("p",null,"To get your domain and peerID, run: ",(0,r.kt)("a",{parentName:"p",href:"#checkprofile"},"Check Profile")),(0,r.kt)("hr",null),(0,r.kt)("admonition",{title:"Danger Zone",type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"\u26a0\ufe0f If you want to delete \u26a0\ufe0f"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~/quickstart-archaeologist\nCOMPOSE_PROFILES=service docker compose down -v\ndocker rmi jwilder/nginx-proxy nginxproxy/acme-companion ghcr.io/sarcophagus-org/sarcophagus-v2-archaeologist-service\n"))))}k.isMDXComponent=!0},449:(e,a,t)=>{t.d(a,{Z:()=>n});const n=t.p+"assets/images/logo2-df45c663ec3370d01c282198905d79b2.png"}}]);