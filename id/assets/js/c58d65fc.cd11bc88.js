"use strict";(self.webpackChunkelysian=self.webpackChunkelysian||[]).push([[827],{4137:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=s(n),m=r,f=p["".concat(u,".").concat(m)]||p[m]||d[m]||o;return n?a.createElement(f,l(l({ref:t},c),{},{components:n})):a.createElement(f,l({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[p]="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},425:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(7294),r=n(6010);const o={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,l),hidden:n},t)}},3992:(e,t,n)=>{n.d(t,{Z:()=>N});var a=n(7462),r=n(7294),o=n(6010),l=n(2957),i=n(6550),u=n(5238),s=n(3609),c=n(2560);function p(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function d(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,s.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const a=(0,i.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,u._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=d(e),[l,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[u,s]=f({queryString:n,groupId:a}),[p,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,c.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),h=(()=>{const e=u??p;return m({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{h&&i(h)}),[h]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),s(e),g(e)}),[s,g,o]),tabValues:o}}var h=n(1048);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:t,block:n,selectedValue:i,selectValue:u,tabValues:s}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,l.o5)(),d=e=>{const t=e.currentTarget,n=c.indexOf(t),a=s[n].value;a!==i&&(p(t),u(a))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},s.map((e=>{let{value:t,label:n,attributes:l}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:d},l,{className:(0,o.Z)("tabs__item",b.tabItem,l?.className,{"tabs__item--active":i===t})}),n??t)})))}function y(e){let{lazy:t,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function k(e){const t=g(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",b.tabList)},r.createElement(v,(0,a.Z)({},e,t)),r.createElement(y,(0,a.Z)({},e,t)))}function N(e){const t=(0,h.Z)();return r.createElement(k,(0,a.Z)({key:String(t)},e))}},2240:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>f,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=n(7462),r=(n(7294),n(4137)),o=n(3992),l=n(425);const i={title:"Migrate from Old Contract",sidebar_position:2,authors:["megumii"],tags:["Arweave","EVM"]},u=void 0,s={unversionedId:"what/sarco/update",id:"what/sarco/update",title:"Migrate from Old Contract",description:"Pull Repo",source:"@site/i18n/id/docusaurus-plugin-content-docs/current/what/sarco/update.mdx",sourceDirName:"what/sarco",slug:"/what/sarco/update",permalink:"/id/docs/what/sarco/update",draft:!1,editUrl:"https://github.com/Megumiiiiii/megumiiiiii.github.io/edit/main/docs/what/sarco/update.mdx",tags:[{label:"Arweave",permalink:"/id/docs/tags/arweave"},{label:"EVM",permalink:"/id/docs/tags/evm"}],version:"current",lastUpdatedBy:"Megumiiiiii",lastUpdatedAt:1697820808,formattedLastUpdatedAt:"20 Okt 2023",sidebarPosition:2,frontMatter:{title:"Migrate from Old Contract",sidebar_position:2,authors:["megumii"],tags:["Arweave","EVM"]},sidebar:"tutorialSidebar",previous:{title:"Install",permalink:"/id/docs/what/sarco/"},next:{title:"AR",permalink:"/id/docs/what/ar"}},c={},p=[{value:"Pull Repo",id:"pull-repo",level:3},{value:"Set .env",id:"set-env",level:3},{value:"Delete Container + Images",id:"delete-container--images",level:3},{value:"Pull latest image",id:"pull-latest-image",level:3},{value:"Register",id:"register",level:3},{value:"RUN!",id:"run",level:2}],d={toc:p},m="wrapper";function f(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h3",{id:"pull-repo"},"Pull Repo"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd quickstart-archaeologist\ngit pull\n")),(0,r.kt)("h3",{id:"set-env"},"Set .env"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Remove old ",(0,r.kt)("inlineCode",{parentName:"li"},".env")," file")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"rm .env\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Copy sample")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cp .env.example .env\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Then fill it")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"nano .env\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},"Use wss:// not https://"),(0,r.kt)("li",{parentName:"ol"},"Generate new Mnemonic for each chain, generate ",(0,r.kt)("a",{parentName:"li",href:"https://iancoleman.io/bip39/"},"Here")," or anything you want"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py",metastring:'title=".env"',title:'".env"'},'## Key used to encrypt secrets and sign ETH transactions\n## The address associated with this key is your archaeologist identifier\nETH_PRIVATE_KEY=ugfgffgfihqwoid132b1231b23\n\n## Domain to use for your archaeologist\n## This domain should be pointed with an A record to your server\'s IP\nDOMAIN=my.exampledomain.com\n\n## Comma-separated list of chain ids of each network you want to run your service on.\n## Supported Chain IDS:\n## 1 = Mainnet\n## 5 = Goerli\n## 11155111 = Sepolia\n## 84531 = Base Goerli\n## 80001 = Polygon Mumbai\n## example, to run on mainnet, goerli, and sepolia, set:\n## CHAIN_IDS="1,5,11155111"\nCHAIN_IDS=1,137\n\n## Here, you should define:\n## - RPC provider urls.\n## - Mnemonics used to derive keypairs to encrypt sarcophagi.\n##   Generate a new one here - https://iancoleman.io/bip39/ or see README to generate one offline.\n## Uncomment and set, for each network chain id you want to run on, your own\n## private provider URL (infura, alchemy, etc) and a unique mnemonic for that network.\n## ================================================================================================\nMAINNET_PROVIDER_URL=wss://eth-mainnet\nMAINNET_ENCRYPTION_MNEMONIC=never gonna give you up never gonna let you down\n\n# GOERLI_PROVIDER_URL=\n# GOERLI_ENCRYPTION_MNEMONIC=\n\nPOLYGON_PROVIDER_URL=wss://polygon-mainnet\nPOLYGON_ENCRYPTION_MNEMONIC=never gonna tell a lie and hurt you\n')),(0,r.kt)("h3",{id:"delete-container--images"},"Delete Container + Images"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"COMPOSE_PROFILES=service docker compose down --remove-orphans\ndocker image prune\n")),(0,r.kt)("h3",{id:"pull-latest-image"},"Pull latest image"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"COMPOSE_PROFILES=service docker compose pull\n")),(0,r.kt)("h3",{id:"register"},"Register"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"If you want to run on multiple chain, you need to registering 1 by 1."),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"Ethereum",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"COMPOSE_PROFILES=register NETWORK=mainnet docker compose run register\n"))),(0,r.kt)(l.Z,{value:"Polygon",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"COMPOSE_PROFILES=register NETWORK=polygonMainnet docker compose run register\n"))))),(0,r.kt)("h2",{id:"run"},"RUN!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"COMPOSE_PROFILES=service NETWORK=all docker compose up -d\n")))}f.isMDXComponent=!0}}]);